[gd_scene load_steps=6 format=2]

[ext_resource path="res://src/Sandbox.gd" type="Script" id=1]
[ext_resource path="res://src/Player.tscn" type="PackedScene" id=2]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;

uniform float speed : hint_range(0.5, 3.0) = 1.0;
uniform float amount : hint_range(0.05, 4.0) = 0.2;
uniform vec4 out_color : hint_color = vec4(0.0, 0.2, 1.0, 1.0); 
uniform float trippy_factor : hint_range(0.1, 20.0) = 0.1;
uniform vec3 player_position;


float generateOffset(vec3 vertex, float val1, float val2, float time){
	
float x = vertex.x;
float y = vertex.y;
float z = vertex.z;

float radiansX =((mod(x + z * x * val1, amount) / amount) + (time * speed) * mod(x * 0.8 + z, 1.5)) * 2.0 * 3.14;
float radiansY =((mod(val2 * (z * x + x * z + y * x + y * z), amount) / amount) + (time * speed) * 2.0 * mod(x,2.0)) * 2.0 * 3.14;
float radiansZ =((mod(val2 * (z * x + x * z), amount) / amount) + (time * speed) * 2.0 * mod(x,2.0)) * 2.0 * 3.14; 

return amount * 0.5 * (sin(radiansZ) + cos(radiansX) + cos(radiansY));
}

vec3 applyDistortion(vec3 vertex, float time){
	float xd = generateOffset(vertex, 0.2, 0.1, time);
	float yd = generateOffset(vertex, 0.1, 0.3, time);
	float zd = generateOffset(vertex, 0.15, 0.2, time);
	
	return vertex + vec3(xd, yd, zd);
}
void vertex(){
	VERTEX = applyDistortion(VERTEX,TIME * 0.1);
	
	vec3 world_position = (WORLD_MATRIX * vec4(VERTEX, 1.0)).xyz;
	
	float l = abs(sqrt((world_position.x - player_position.x) * (world_position.x - player_position.x) + (world_position.z - player_position.z) * (world_position.z - player_position.z)));
	
	if(l < 5.0){
		VERTEX.y += (5.0 - l) * 0.2;
		
	}

}



void fragment(){
	NORMAL = normalize(cross(dFdx(VERTEX), dFdy(VERTEX)));
	ALBEDO = out_color.rgb;
	
	//Opacity
	float depth = texture(DEPTH_TEXTURE, SCREEN_UV).r;
	depth = depth * 2.0 - 1.0;
	depth = PROJECTION_MATRIX[3][2] / (depth + PROJECTION_MATRIX[2][2]);
	depth = depth + VERTEX.z;
	depth = exp(-depth * trippy_factor);
	ALPHA = clamp(1.0 - depth, 0.0, 1.0);
	
	
	
}

"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/speed = 1.0
shader_param/amount = 0.3
shader_param/out_color = Color( 0.0509804, 0.796078, 0.917647, 1 )
shader_param/trippy_factor = 2.0
shader_param/player_position = null

[sub_resource type="PlaneMesh" id=3]
material = SubResource( 2 )
size = Vector2( 500, 500 )
subdivide_width = 500
subdivide_depth = 500

[node name="Sandbox" type="Spatial"]
script = ExtResource( 1 )

[node name="Water" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.118635, 0, -0.27883 )
mesh = SubResource( 3 )
material/0 = null

[node name="Player" parent="." instance=ExtResource( 2 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.49063, 0 )
